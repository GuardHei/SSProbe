//#pragma enable_ray_tracing_shader_debug_symbols

#pragma max_recursion_depth 1

#include "RaytracingCommon.hlsl"

[shader("miss")]
void SampleRayMiss(inout SamplePayload payload : SV_RayPayload)
{
    payload.color = COLOR_MAGENTA;
}

[shader("raygeneration")]
void SampleRayGen()
{
    uint2 dispatchIdx = DispatchRaysIndex().xy;
    uint2 dispatchDim = DispatchRaysDimensions().xy;
    float2 screenPos = RayIdToScreenPos(dispatchIdx, dispatchDim);
    
    float rayBias = 1e-5f;
    float rayDistance = 9999;

    float3 rayOrigin;
    float3 rayDir;

    GenerateCameraRay(screenPos, rayOrigin, rayDir);

    RayDesc rayDesc;
    rayDesc.Origin = rayOrigin;
    rayDesc.Direction = rayDir;
    rayDesc.TMin = rayBias;
    rayDesc.TMax = rayDistance;

    SamplePayload payload;
    payload.color = float4(0.0f, 0.0f, 0.0f, 0.0f);

    TraceRay(RTAS, kRayFlagCullBackFacingTriangles, kAllInstanceMask, 0, 1, 0, rayDesc, payload);
   
    _SampleRaytraceTex[dispatchIdx] = payload.color;
}